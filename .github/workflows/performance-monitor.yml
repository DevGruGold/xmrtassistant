name: Performance Monitor - Vite Fixed

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  bundle-analysis:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        
    - name: Install dependencies
      run: |
        echo "📦 Installing dependencies..."
        npm ci
        
    - name: Build project for analysis
      run: |
        echo "🏗️ Building Vite project..."
        npm run build
        
    - name: Analyze bundle size
      id: bundle-analysis
      run: |
        echo "## 📊 Vite Bundle Analysis" >> $GITHUB_STEP_SUMMARY
        echo "### Build Output" >> $GITHUB_STEP_SUMMARY
        
        if [ -d "dist/" ]; then
          TOTAL_SIZE=$(du -sh dist/ | cut -f1)
          echo "**Total Build Size:** $TOTAL_SIZE" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          
          echo "### File Breakdown" >> $GITHUB_STEP_SUMMARY
          echo "| File | Size |" >> $GITHUB_STEP_SUMMARY
          echo "|------|------|" >> $GITHUB_STEP_SUMMARY
          
          find dist/ -type f \( -name "*.js" -o -name "*.css" -o -name "*.html" \) | while read file; do
            size=$(du -sh "$file" | cut -f1)
            filename=$(basename "$file")
            echo "| $filename | $size |" >> $GITHUB_STEP_SUMMARY
          done
          
          echo "total_size_kb=$(du -sk dist/ | cut -f1)" >> $GITHUB_OUTPUT
        else
          echo "**Error: No dist/ directory found**" >> $GITHUB_STEP_SUMMARY
          echo "total_size_kb=0" >> $GITHUB_OUTPUT
          exit 1
        fi
        
    - name: Bundle size check
      run: |
        MAX_SIZE=3000  # 3MB in KB for Vite project
        ACTUAL_SIZE=${{ steps.bundle-analysis.outputs.total_size_kb }}
        
        echo "📦 Bundle size: ${ACTUAL_SIZE}KB (limit: ${MAX_SIZE}KB)"
        
        if [ "$ACTUAL_SIZE" -gt "$MAX_SIZE" ]; then
          echo "❌ Bundle size exceeds ${MAX_SIZE}KB limit!"
          echo "## 🚨 Bundle Size Alert" >> $GITHUB_STEP_SUMMARY
          echo "Current build size (${ACTUAL_SIZE}KB) exceeds the ${MAX_SIZE}KB limit." >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### Vite Optimization Suggestions:" >> $GITHUB_STEP_SUMMARY
          echo "- Use \`vite-bundle-analyzer\` to identify large chunks" >> $GITHUB_STEP_SUMMARY
          echo "- Implement code splitting with dynamic imports" >> $GITHUB_STEP_SUMMARY
          echo "- Use tree shaking to remove unused code" >> $GITHUB_STEP_SUMMARY
          echo "- Optimize images and assets" >> $GITHUB_STEP_SUMMARY
          echo "- Consider lazy loading for components" >> $GITHUB_STEP_SUMMARY
          exit 1
        else
          echo "✅ Bundle size is within limits"
          echo "## ✅ Bundle Size OK" >> $GITHUB_STEP_SUMMARY
          echo "Build size (${ACTUAL_SIZE}KB) is within the ${MAX_SIZE}KB limit." >> $GITHUB_STEP_SUMMARY
        fi
        
    - name: Upload build artifacts
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: 'vite-build-${{ github.run_number }}'
        path: dist/
        retention-days: 30
