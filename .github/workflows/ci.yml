name: CI/CD Pipeline
'on':
  push:
    branches:
    - main
    - develop
  pull_request:
    branches:
    - main
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true
jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version:
        - '16'
        - '18'
        - '20'
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    - name: Setup Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: npm
    - name: Install dependencies
      run: npm ci
    - name: Run type checking
      run: npm run type-check || echo "Type checking not configured"
    - name: Run linting
      run: npm run lint || echo "Linting not configured"
    - name: Run tests
      run: npm test || echo "Tests not configured"
    - name: Build project
      run: npm run build || echo "Build script not configured"
    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      if: matrix.node-version == '18'
      with:
        name: build-files
        path: dist/
        retention-days: 30
  deploy:
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    environment:
      name: production
      url: ${{ steps.deploy.outputs.url }}
    steps:
    - name: Download build artifacts
      uses: actions/download-artifact@v4
      with:
        name: build-files
        path: dist/
    - name: Deploy to production
      id: deploy
      run: "\n                            echo \"Deploying to production...\"\n  \
        \                          # Add your deployment commands here\n         \
        \                   # Example: scp -r dist/ user@server:/var/www/html/\n \
        \                           echo \"url=https://your-production-url.com\" >>\
        \ $GITHUB_OUTPUT\n                        "
